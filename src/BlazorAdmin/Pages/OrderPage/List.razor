@page "/admin/order/list"
@using BlazorShared.Interfaces.Orders
@using BlazorShared.Models.Orders

@attribute [Authorize(Roles = BlazorShared.Authorization.Constants.Roles.ADMINISTRATORS)]
@inherits BlazorAdmin.Helpers.BlazorComponent


<PageTitle>eShopOnWeb Admin: Order List</PageTitle>

@if (orderList == null)
{
    <Spinner></Spinner>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Order Date</th>
                <th scope="col">Client</th>
                <th scope="col">Total Amount</th>
                <th scope="col">Order Stat.</th>
                <th scope="col">Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in orderList)
            {
                <tr>
                    <th scope="row">1</th>
                    <td>@item.OrderDate</td>
                    <td>@item.BuyerId</td>
                    <td>@item.TotalPrice</td>
                    <td>@item.OrderStatus</td>
                    <td>
                        <button @onclick="@(() => EditClick(item.Id))" @onclick:stopPropagation="true" class="btn btn-primary">
                            Edit
                        </button>
                        <button @onclick:stopPropagation="true" class="btn btn-danger">
                            Delete
                        </button>

                         @*
                        <button @onclick="@(() => DeleteClick(item.Id))" @onclick:stopPropagation="true" class="btn btn-danger">
                            Delete
                        </button>
                        *@
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<Edit OnSaveClick="ReloadOrders" OrderStatus="@orderStatusList" @ref="EditComponent"></Edit>

@code {
    [Inject]
    public IOrderService _orderService { get; set; }

    [Inject]
    public IOrderLookupDataService<OrderStatus> OrderStatusService { get; set; }

    private List<Order> orderList = new();
    private List<OrderStatus> orderStatusList = new();

    private Edit EditComponent { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            orderList = await _orderService.List();
            orderStatusList = await OrderStatusService.List();
            CallRequestRefresh();
        }
        await base.OnAfterRenderAsync(firstRender);
    }

    private async Task ReloadOrders()
    {
        orderList = await _orderService.List();
        StateHasChanged();
    }

    private async Task EditClick(int id)
    {
        await EditComponent.Open(id);
    }
}
